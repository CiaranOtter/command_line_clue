// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: proto/clue.proto

package comm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommandType int32

const (
	CommandType_PICK_CHAR CommandType = 0
)

// Enum value maps for CommandType.
var (
	CommandType_name = map[int32]string{
		0: "PICK_CHAR",
	}
	CommandType_value = map[string]int32{
		"PICK_CHAR": 0,
	}
)

func (x CommandType) Enum() *CommandType {
	p := new(CommandType)
	*p = x
	return p
}

func (x CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_clue_proto_enumTypes[0].Descriptor()
}

func (CommandType) Type() protoreflect.EnumType {
	return &file_proto_clue_proto_enumTypes[0]
}

func (x CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandType.Descriptor instead.
func (CommandType) EnumDescriptor() ([]byte, []int) {
	return file_proto_clue_proto_rawDescGZIP(), []int{0}
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*Message_Con
	//	*Message_Opp
	//	*Message_Com
	//	*Message_End
	//	*Message_SetChar
	//	*Message_Start
	//	*Message_RAns
	//	*Message_Cards
	//	*Message_Turn
	//	*Message_Endturn
	//	*Message_Move
	//	*Message_Accuse
	//	*Message_Show
	Data isMessage_Data `protobuf_oneof:"data"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_clue_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_proto_clue_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_proto_clue_proto_rawDescGZIP(), []int{0}
}

func (m *Message) GetData() isMessage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Message) GetCon() *Connect {
	if x, ok := x.GetData().(*Message_Con); ok {
		return x.Con
	}
	return nil
}

func (x *Message) GetOpp() *Opponent {
	if x, ok := x.GetData().(*Message_Opp); ok {
		return x.Opp
	}
	return nil
}

func (x *Message) GetCom() *Command {
	if x, ok := x.GetData().(*Message_Com); ok {
		return x.Com
	}
	return nil
}

func (x *Message) GetEnd() *GameEnd {
	if x, ok := x.GetData().(*Message_End); ok {
		return x.End
	}
	return nil
}

func (x *Message) GetSetChar() *SetPlayer {
	if x, ok := x.GetData().(*Message_SetChar); ok {
		return x.SetChar
	}
	return nil
}

func (x *Message) GetStart() *StartGame {
	if x, ok := x.GetData().(*Message_Start); ok {
		return x.Start
	}
	return nil
}

func (x *Message) GetRAns() *RemoveAnswer {
	if x, ok := x.GetData().(*Message_RAns); ok {
		return x.RAns
	}
	return nil
}

func (x *Message) GetCards() *Cards {
	if x, ok := x.GetData().(*Message_Cards); ok {
		return x.Cards
	}
	return nil
}

func (x *Message) GetTurn() *StartTurn {
	if x, ok := x.GetData().(*Message_Turn); ok {
		return x.Turn
	}
	return nil
}

func (x *Message) GetEndturn() *EndTurn {
	if x, ok := x.GetData().(*Message_Endturn); ok {
		return x.Endturn
	}
	return nil
}

func (x *Message) GetMove() *Move {
	if x, ok := x.GetData().(*Message_Move); ok {
		return x.Move
	}
	return nil
}

func (x *Message) GetAccuse() *Accuse {
	if x, ok := x.GetData().(*Message_Accuse); ok {
		return x.Accuse
	}
	return nil
}

func (x *Message) GetShow() *Show {
	if x, ok := x.GetData().(*Message_Show); ok {
		return x.Show
	}
	return nil
}

type isMessage_Data interface {
	isMessage_Data()
}

type Message_Con struct {
	Con *Connect `protobuf:"bytes,1,opt,name=con,proto3,oneof"`
}

type Message_Opp struct {
	Opp *Opponent `protobuf:"bytes,2,opt,name=opp,proto3,oneof"`
}

type Message_Com struct {
	Com *Command `protobuf:"bytes,3,opt,name=com,proto3,oneof"`
}

type Message_End struct {
	End *GameEnd `protobuf:"bytes,4,opt,name=end,proto3,oneof"`
}

type Message_SetChar struct {
	SetChar *SetPlayer `protobuf:"bytes,5,opt,name=setChar,proto3,oneof"`
}

type Message_Start struct {
	Start *StartGame `protobuf:"bytes,6,opt,name=start,proto3,oneof"`
}

type Message_RAns struct {
	RAns *RemoveAnswer `protobuf:"bytes,7,opt,name=rAns,proto3,oneof"`
}

type Message_Cards struct {
	Cards *Cards `protobuf:"bytes,8,opt,name=cards,proto3,oneof"`
}

type Message_Turn struct {
	Turn *StartTurn `protobuf:"bytes,9,opt,name=turn,proto3,oneof"`
}

type Message_Endturn struct {
	Endturn *EndTurn `protobuf:"bytes,10,opt,name=endturn,proto3,oneof"`
}

type Message_Move struct {
	Move *Move `protobuf:"bytes,11,opt,name=move,proto3,oneof"`
}

type Message_Accuse struct {
	Accuse *Accuse `protobuf:"bytes,12,opt,name=accuse,proto3,oneof"`
}

type Message_Show struct {
	Show *Show `protobuf:"bytes,13,opt,name=show,proto3,oneof"`
}

func (*Message_Con) isMessage_Data() {}

func (*Message_Opp) isMessage_Data() {}

func (*Message_Com) isMessage_Data() {}

func (*Message_End) isMessage_Data() {}

func (*Message_SetChar) isMessage_Data() {}

func (*Message_Start) isMessage_Data() {}

func (*Message_RAns) isMessage_Data() {}

func (*Message_Cards) isMessage_Data() {}

func (*Message_Turn) isMessage_Data() {}

func (*Message_Endturn) isMessage_Data() {}

func (*Message_Move) isMessage_Data() {}

func (*Message_Accuse) isMessage_Data() {}

func (*Message_Show) isMessage_Data() {}

type Move struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomName string `protobuf:"bytes,1,opt,name=RoomName,proto3" json:"RoomName,omitempty"`
}

func (x *Move) Reset() {
	*x = Move{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_clue_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Move) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Move) ProtoMessage() {}

func (x *Move) ProtoReflect() protoreflect.Message {
	mi := &file_proto_clue_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Move.ProtoReflect.Descriptor instead.
func (*Move) Descriptor() ([]byte, []int) {
	return file_proto_clue_proto_rawDescGZIP(), []int{1}
}

func (x *Move) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

type StartTurn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartTurn) Reset() {
	*x = StartTurn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_clue_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTurn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTurn) ProtoMessage() {}

func (x *StartTurn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_clue_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTurn.ProtoReflect.Descriptor instead.
func (*StartTurn) Descriptor() ([]byte, []int) {
	return file_proto_clue_proto_rawDescGZIP(), []int{2}
}

type EndTurn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EndTurn) Reset() {
	*x = EndTurn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_clue_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndTurn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndTurn) ProtoMessage() {}

func (x *EndTurn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_clue_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndTurn.ProtoReflect.Descriptor instead.
func (*EndTurn) Descriptor() ([]byte, []int) {
	return file_proto_clue_proto_rawDescGZIP(), []int{3}
}

type RemoveAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room int32 `protobuf:"varint,1,opt,name=Room,proto3" json:"Room,omitempty"`
	Char int32 `protobuf:"varint,2,opt,name=Char,proto3" json:"Char,omitempty"`
	Weap int32 `protobuf:"varint,3,opt,name=Weap,proto3" json:"Weap,omitempty"`
}

func (x *RemoveAnswer) Reset() {
	*x = RemoveAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_clue_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAnswer) ProtoMessage() {}

func (x *RemoveAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_clue_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAnswer.ProtoReflect.Descriptor instead.
func (*RemoveAnswer) Descriptor() ([]byte, []int) {
	return file_proto_clue_proto_rawDescGZIP(), []int{4}
}

func (x *RemoveAnswer) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *RemoveAnswer) GetChar() int32 {
	if x != nil {
		return x.Char
	}
	return 0
}

func (x *RemoveAnswer) GetWeap() int32 {
	if x != nil {
		return x.Weap
	}
	return 0
}

type Cards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index []string `protobuf:"bytes,1,rep,name=index,proto3" json:"index,omitempty"`
}

func (x *Cards) Reset() {
	*x = Cards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_clue_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cards) ProtoMessage() {}

func (x *Cards) ProtoReflect() protoreflect.Message {
	mi := &file_proto_clue_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cards.ProtoReflect.Descriptor instead.
func (*Cards) Descriptor() ([]byte, []int) {
	return file_proto_clue_proto_rawDescGZIP(), []int{5}
}

func (x *Cards) GetIndex() []string {
	if x != nil {
		return x.Index
	}
	return nil
}

type Opponent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerName string `protobuf:"bytes,1,opt,name=PlayerName,proto3" json:"PlayerName,omitempty"`
	// Types that are assignable to Data:
	//
	//	*Opponent_Con
	//	*Opponent_SetChar
	//	*Opponent_Move
	//	*Opponent_Accuse
	//	*Opponent_Ask
	//	*Opponent_Show
	//	*Opponent_Startturn
	//	*Opponent_Endturn
	Data isOpponent_Data `protobuf_oneof:"data"`
}

func (x *Opponent) Reset() {
	*x = Opponent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_clue_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Opponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Opponent) ProtoMessage() {}

func (x *Opponent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_clue_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Opponent.ProtoReflect.Descriptor instead.
func (*Opponent) Descriptor() ([]byte, []int) {
	return file_proto_clue_proto_rawDescGZIP(), []int{6}
}

func (x *Opponent) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (m *Opponent) GetData() isOpponent_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Opponent) GetCon() *Connect {
	if x, ok := x.GetData().(*Opponent_Con); ok {
		return x.Con
	}
	return nil
}

func (x *Opponent) GetSetChar() *SetPlayer {
	if x, ok := x.GetData().(*Opponent_SetChar); ok {
		return x.SetChar
	}
	return nil
}

func (x *Opponent) GetMove() *Move {
	if x, ok := x.GetData().(*Opponent_Move); ok {
		return x.Move
	}
	return nil
}

func (x *Opponent) GetAccuse() *Accuse {
	if x, ok := x.GetData().(*Opponent_Accuse); ok {
		return x.Accuse
	}
	return nil
}

func (x *Opponent) GetAsk() *AskShow {
	if x, ok := x.GetData().(*Opponent_Ask); ok {
		return x.Ask
	}
	return nil
}

func (x *Opponent) GetShow() *Show {
	if x, ok := x.GetData().(*Opponent_Show); ok {
		return x.Show
	}
	return nil
}

func (x *Opponent) GetStartturn() *StartTurn {
	if x, ok := x.GetData().(*Opponent_Startturn); ok {
		return x.Startturn
	}
	return nil
}

func (x *Opponent) GetEndturn() *EndTurn {
	if x, ok := x.GetData().(*Opponent_Endturn); ok {
		return x.Endturn
	}
	return nil
}

type isOpponent_Data interface {
	isOpponent_Data()
}

type Opponent_Con struct {
	Con *Connect `protobuf:"bytes,2,opt,name=con,proto3,oneof"`
}

type Opponent_SetChar struct {
	SetChar *SetPlayer `protobuf:"bytes,3,opt,name=setChar,proto3,oneof"`
}

type Opponent_Move struct {
	Move *Move `protobuf:"bytes,4,opt,name=move,proto3,oneof"`
}

type Opponent_Accuse struct {
	Accuse *Accuse `protobuf:"bytes,5,opt,name=accuse,proto3,oneof"`
}

type Opponent_Ask struct {
	Ask *AskShow `protobuf:"bytes,6,opt,name=Ask,proto3,oneof"`
}

type Opponent_Show struct {
	Show *Show `protobuf:"bytes,7,opt,name=show,proto3,oneof"`
}

type Opponent_Startturn struct {
	Startturn *StartTurn `protobuf:"bytes,8,opt,name=startturn,proto3,oneof"`
}

type Opponent_Endturn struct {
	Endturn *EndTurn `protobuf:"bytes,9,opt,name=endturn,proto3,oneof"`
}

func (*Opponent_Con) isOpponent_Data() {}

func (*Opponent_SetChar) isOpponent_Data() {}

func (*Opponent_Move) isOpponent_Data() {}

func (*Opponent_Accuse) isOpponent_Data() {}

func (*Opponent_Ask) isOpponent_Data() {}

func (*Opponent_Show) isOpponent_Data() {}

func (*Opponent_Startturn) isOpponent_Data() {}

func (*Opponent_Endturn) isOpponent_Data() {}

type AskShow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards []string `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
}

func (x *AskShow) Reset() {
	*x = AskShow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_clue_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskShow) ProtoMessage() {}

func (x *AskShow) ProtoReflect() protoreflect.Message {
	mi := &file_proto_clue_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskShow.ProtoReflect.Descriptor instead.
func (*AskShow) Descriptor() ([]byte, []int) {
	return file_proto_clue_proto_rawDescGZIP(), []int{7}
}

func (x *AskShow) GetCards() []string {
	if x != nil {
		return x.Cards
	}
	return nil
}

type Show struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card       string `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
	PlayerName string `protobuf:"bytes,2,opt,name=PlayerName,proto3" json:"PlayerName,omitempty"`
	HasCard    bool   `protobuf:"varint,3,opt,name=HasCard,proto3" json:"HasCard,omitempty"`
}

func (x *Show) Reset() {
	*x = Show{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_clue_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Show) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Show) ProtoMessage() {}

func (x *Show) ProtoReflect() protoreflect.Message {
	mi := &file_proto_clue_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Show.ProtoReflect.Descriptor instead.
func (*Show) Descriptor() ([]byte, []int) {
	return file_proto_clue_proto_rawDescGZIP(), []int{8}
}

func (x *Show) GetCard() string {
	if x != nil {
		return x.Card
	}
	return ""
}

func (x *Show) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *Show) GetHasCard() bool {
	if x != nil {
		return x.HasCard
	}
	return false
}

type Accuse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weap  string `protobuf:"bytes,1,opt,name=Weap,proto3" json:"Weap,omitempty"`
	Char  string `protobuf:"bytes,2,opt,name=Char,proto3" json:"Char,omitempty"`
	Room  string `protobuf:"bytes,3,opt,name=Room,proto3" json:"Room,omitempty"`
	Final bool   `protobuf:"varint,4,opt,name=final,proto3" json:"final,omitempty"`
}

func (x *Accuse) Reset() {
	*x = Accuse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_clue_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Accuse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Accuse) ProtoMessage() {}

func (x *Accuse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_clue_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Accuse.ProtoReflect.Descriptor instead.
func (*Accuse) Descriptor() ([]byte, []int) {
	return file_proto_clue_proto_rawDescGZIP(), []int{9}
}

func (x *Accuse) GetWeap() string {
	if x != nil {
		return x.Weap
	}
	return ""
}

func (x *Accuse) GetChar() string {
	if x != nil {
		return x.Char
	}
	return ""
}

func (x *Accuse) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *Accuse) GetFinal() bool {
	if x != nil {
		return x.Final
	}
	return false
}

type GameEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameEnd) Reset() {
	*x = GameEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_clue_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEnd) ProtoMessage() {}

func (x *GameEnd) ProtoReflect() protoreflect.Message {
	mi := &file_proto_clue_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEnd.ProtoReflect.Descriptor instead.
func (*GameEnd) Descriptor() ([]byte, []int) {
	return file_proto_clue_proto_rawDescGZIP(), []int{10}
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type CommandType `protobuf:"varint,1,opt,name=type,proto3,enum=CommandType" json:"type,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_clue_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_proto_clue_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_proto_clue_proto_rawDescGZIP(), []int{11}
}

func (x *Command) GetType() CommandType {
	if x != nil {
		return x.Type
	}
	return CommandType_PICK_CHAR
}

type Connect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerName string `protobuf:"bytes,1,opt,name=playerName,proto3" json:"playerName,omitempty"`
	Success    bool   `protobuf:"varint,2,opt,name=Success,proto3" json:"Success,omitempty"`
}

func (x *Connect) Reset() {
	*x = Connect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_clue_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connect) ProtoMessage() {}

func (x *Connect) ProtoReflect() protoreflect.Message {
	mi := &file_proto_clue_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connect.ProtoReflect.Descriptor instead.
func (*Connect) Descriptor() ([]byte, []int) {
	return file_proto_clue_proto_rawDescGZIP(), []int{12}
}

func (x *Connect) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *Connect) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SetPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterName string `protobuf:"bytes,1,opt,name=CharacterName,proto3" json:"CharacterName,omitempty"`
}

func (x *SetPlayer) Reset() {
	*x = SetPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_clue_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayer) ProtoMessage() {}

func (x *SetPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_clue_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayer.ProtoReflect.Descriptor instead.
func (*SetPlayer) Descriptor() ([]byte, []int) {
	return file_proto_clue_proto_rawDescGZIP(), []int{13}
}

func (x *SetPlayer) GetCharacterName() string {
	if x != nil {
		return x.CharacterName
	}
	return ""
}

type StartGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartGame) Reset() {
	*x = StartGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_clue_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGame) ProtoMessage() {}

func (x *StartGame) ProtoReflect() protoreflect.Message {
	mi := &file_proto_clue_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGame.ProtoReflect.Descriptor instead.
func (*StartGame) Descriptor() ([]byte, []int) {
	return file_proto_clue_proto_rawDescGZIP(), []int{14}
}

var File_proto_clue_proto protoreflect.FileDescriptor

var file_proto_clue_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xc0, 0x03, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c,
	0x0a, 0x03, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x03, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x03,
	0x6f, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4f, 0x70, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x03, 0x6f, 0x70, 0x70, 0x12, 0x1c, 0x0a, 0x03, 0x63,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x48, 0x00, 0x52, 0x03, 0x63, 0x6f, 0x6d, 0x12, 0x1c, 0x0a, 0x03, 0x65, 0x6e, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x64,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x12,
	0x22, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x72, 0x41, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x04, 0x72, 0x41, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x48,
	0x00, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x75, 0x72, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x75,
	0x72, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x24, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x45, 0x6e,
	0x64, 0x54, 0x75, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x75, 0x72, 0x6e,
	0x12, 0x1b, 0x0a, 0x04, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x21, 0x0a,
	0x06, 0x61, 0x63, 0x63, 0x75, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x41, 0x63, 0x63, 0x75, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x61, 0x63, 0x63, 0x75, 0x73, 0x65,
	0x12, 0x1b, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05,
	0x2e, 0x53, 0x68, 0x6f, 0x77, 0x48, 0x00, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x42, 0x06, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x22, 0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x0b, 0x0a, 0x09, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x22, 0x09, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x75, 0x72,
	0x6e, 0x22, 0x4a, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x68, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x57, 0x65, 0x61,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x57, 0x65, 0x61, 0x70, 0x22, 0x1d, 0x0a,
	0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xc5, 0x02, 0x0a,
	0x08, 0x4f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x03, 0x63, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x48, 0x00, 0x52, 0x03, 0x63, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x12,
	0x1b, 0x0a, 0x04, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x4d, 0x6f, 0x76, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x21, 0x0a, 0x06,
	0x61, 0x63, 0x63, 0x75, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x41,
	0x63, 0x63, 0x75, 0x73, 0x65, 0x48, 0x00, 0x52, 0x06, 0x61, 0x63, 0x63, 0x75, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x03, 0x41, 0x73, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41,
	0x73, 0x6b, 0x53, 0x68, 0x6f, 0x77, 0x48, 0x00, 0x52, 0x03, 0x41, 0x73, 0x6b, 0x12, 0x1b, 0x0a,
	0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x68,
	0x6f, 0x77, 0x48, 0x00, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x2a, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x24, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x75, 0x72,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x45, 0x6e, 0x64, 0x54, 0x75, 0x72,
	0x6e, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x75, 0x72, 0x6e, 0x42, 0x06, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x1f, 0x0a, 0x07, 0x41, 0x73, 0x6b, 0x53, 0x68, 0x6f, 0x77, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x61, 0x72, 0x64, 0x73, 0x22, 0x54, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x61, 0x72,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x61, 0x73, 0x43, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x48, 0x61, 0x73, 0x43, 0x61, 0x72, 0x64, 0x22, 0x5a, 0x0a, 0x06, 0x41,
	0x63, 0x63, 0x75, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x57, 0x65, 0x61, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x57, 0x65, 0x61, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x68, 0x61,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x68, 0x61, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x52, 0x6f, 0x6f,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x22, 0x09, 0x0a, 0x07, 0x47, 0x61, 0x6d, 0x65, 0x45,
	0x6e, 0x64, 0x22, 0x2b, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x20, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x43, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x31, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x0b, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x2a, 0x1c, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x49, 0x43, 0x4b, 0x5f, 0x43, 0x48, 0x41, 0x52,
	0x10, 0x00, 0x32, 0x33, 0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x24, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x0b, 0x5a, 0x09, 0x63, 0x6c, 0x75, 0x65, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_clue_proto_rawDescOnce sync.Once
	file_proto_clue_proto_rawDescData = file_proto_clue_proto_rawDesc
)

func file_proto_clue_proto_rawDescGZIP() []byte {
	file_proto_clue_proto_rawDescOnce.Do(func() {
		file_proto_clue_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_clue_proto_rawDescData)
	})
	return file_proto_clue_proto_rawDescData
}

var file_proto_clue_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_clue_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_clue_proto_goTypes = []interface{}{
	(CommandType)(0),     // 0: CommandType
	(*Message)(nil),      // 1: Message
	(*Move)(nil),         // 2: Move
	(*StartTurn)(nil),    // 3: StartTurn
	(*EndTurn)(nil),      // 4: EndTurn
	(*RemoveAnswer)(nil), // 5: RemoveAnswer
	(*Cards)(nil),        // 6: Cards
	(*Opponent)(nil),     // 7: Opponent
	(*AskShow)(nil),      // 8: AskShow
	(*Show)(nil),         // 9: Show
	(*Accuse)(nil),       // 10: Accuse
	(*GameEnd)(nil),      // 11: GameEnd
	(*Command)(nil),      // 12: Command
	(*Connect)(nil),      // 13: Connect
	(*SetPlayer)(nil),    // 14: SetPlayer
	(*StartGame)(nil),    // 15: StartGame
}
var file_proto_clue_proto_depIdxs = []int32{
	13, // 0: Message.con:type_name -> Connect
	7,  // 1: Message.opp:type_name -> Opponent
	12, // 2: Message.com:type_name -> Command
	11, // 3: Message.end:type_name -> GameEnd
	14, // 4: Message.setChar:type_name -> SetPlayer
	15, // 5: Message.start:type_name -> StartGame
	5,  // 6: Message.rAns:type_name -> RemoveAnswer
	6,  // 7: Message.cards:type_name -> Cards
	3,  // 8: Message.turn:type_name -> StartTurn
	4,  // 9: Message.endturn:type_name -> EndTurn
	2,  // 10: Message.move:type_name -> Move
	10, // 11: Message.accuse:type_name -> Accuse
	9,  // 12: Message.show:type_name -> Show
	13, // 13: Opponent.con:type_name -> Connect
	14, // 14: Opponent.setChar:type_name -> SetPlayer
	2,  // 15: Opponent.move:type_name -> Move
	10, // 16: Opponent.accuse:type_name -> Accuse
	8,  // 17: Opponent.Ask:type_name -> AskShow
	9,  // 18: Opponent.show:type_name -> Show
	3,  // 19: Opponent.startturn:type_name -> StartTurn
	4,  // 20: Opponent.endturn:type_name -> EndTurn
	0,  // 21: Command.type:type_name -> CommandType
	1,  // 22: ClueService.GameStream:input_type -> Message
	1,  // 23: ClueService.GameStream:output_type -> Message
	23, // [23:24] is the sub-list for method output_type
	22, // [22:23] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_proto_clue_proto_init() }
func file_proto_clue_proto_init() {
	if File_proto_clue_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_clue_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_clue_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Move); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_clue_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTurn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_clue_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndTurn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_clue_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_clue_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_clue_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Opponent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_clue_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AskShow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_clue_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Show); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_clue_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Accuse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_clue_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_clue_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_clue_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_clue_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_clue_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_clue_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Message_Con)(nil),
		(*Message_Opp)(nil),
		(*Message_Com)(nil),
		(*Message_End)(nil),
		(*Message_SetChar)(nil),
		(*Message_Start)(nil),
		(*Message_RAns)(nil),
		(*Message_Cards)(nil),
		(*Message_Turn)(nil),
		(*Message_Endturn)(nil),
		(*Message_Move)(nil),
		(*Message_Accuse)(nil),
		(*Message_Show)(nil),
	}
	file_proto_clue_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Opponent_Con)(nil),
		(*Opponent_SetChar)(nil),
		(*Opponent_Move)(nil),
		(*Opponent_Accuse)(nil),
		(*Opponent_Ask)(nil),
		(*Opponent_Show)(nil),
		(*Opponent_Startturn)(nil),
		(*Opponent_Endturn)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_clue_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_clue_proto_goTypes,
		DependencyIndexes: file_proto_clue_proto_depIdxs,
		EnumInfos:         file_proto_clue_proto_enumTypes,
		MessageInfos:      file_proto_clue_proto_msgTypes,
	}.Build()
	File_proto_clue_proto = out.File
	file_proto_clue_proto_rawDesc = nil
	file_proto_clue_proto_goTypes = nil
	file_proto_clue_proto_depIdxs = nil
}
